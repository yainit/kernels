Update ppscsi for "[SCSI] implement scsi_data_buffer" change on Linux 2.6.25
(commit 30b0c37b27485a9cb897bfe3824f6f517b8c80d6)

Signed-off-by: Herton Ronaldo Krzesinski <herton@mandriva.com.br>

---
 drivers/scsi/ppscsi.c |   30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

--- a/drivers/scsi/ppscsi.c
+++ b/drivers/scsi/ppscsi.c
@@ -424,16 +424,16 @@ static void ppsc_start (PHA *pha)
 
 	bf &= (!((1<<pha->cur_cmd->device->id) & pha->slow_targets));
 
-	r = pha->cur_cmd->use_sg;
+	r = scsi_sg_count(pha->cur_cmd);
 	if (r) {
 		b = 0;
-		p = (struct scatterlist *)pha->cur_cmd->request_buffer;
+		p = scsi_sglist(pha->cur_cmd);
 		for (k=0;k<r;k++) {
 			b += p->length;
 			p++;
 		}
 	} else {
-		b = pha->cur_cmd->request_bufflen;
+		b = scsi_bufflen(pha->cur_cmd);
 	}
 
 	bf &= (b > 127);
@@ -567,16 +567,16 @@ static void ppsc_engine (PHA *pha)
 				pha->data_dir = phase & PPSC_IO;
 				pha->data_count = 0;
 
-				pha->sg_count = pha->cur_cmd->use_sg;
+				pha->sg_count = scsi_sg_count(pha->cur_cmd);
 				if (pha->sg_count) {
 					pha->sg_count--;
-					pha->sg_list =
-						(struct scatterlist *)pha->cur_cmd->request_buffer;
+					pha->sg_list = scsi_sglist(pha->cur_cmd);
 					pha->cur_buf = sg_virt(pha->sg_list);
 					pha->cur_len = pha->sg_list->length;
 				} else {
-					pha->cur_buf = pha->cur_cmd->request_buffer;
-					pha->cur_len = pha->cur_cmd->request_bufflen;
+					pha->cur_buf =
+						(char *)pha->cur_cmd->sdb.table.sgl;
+					pha->cur_len = scsi_bufflen(pha->cur_cmd);
 				}
 
 				pha->last_phase = phase;
@@ -622,7 +622,7 @@ static void ppsc_engine (PHA *pha)
 
 				if (pha->cur_cmd->cmnd[0] == REQUEST_SENSE) {
 
-					sb = (char *)pha->cur_cmd->request_buffer;
+					sb = (char *)pha->cur_cmd->sdb.table.sgl;
 					printk("%s: Sense key: %x ASC: %x ASCQ: %x\n",
 					       pha->device, sb[2] & 0xff,
 					       sb[12] & 0xff, sb[13] & 0xff);
@@ -819,9 +819,9 @@ static void ppsc_cleanup (PHA *pha)
 		cmd->cmnd[4] = sizeof(cmd->sense_buffer);
 		cmd->cmnd[5] = 0;
 		cmd->cmd_len = 6;
-		cmd->use_sg = 0;
-		cmd->request_buffer = (char *) cmd->sense_buffer;
-		cmd->request_bufflen = sizeof(cmd->sense_buffer);
+		cmd->sdb.table.nents = 0;
+		cmd->sdb.table.sgl = (void *) cmd->sense_buffer;
+		cmd->sdb.length = sizeof(cmd->sense_buffer);
 
 		pha->cur_cmd = cmd;
 		ppsc_do_claimed(pha,ppsc_start);
@@ -1018,9 +1018,9 @@ static int ppsc_inquire (PHA *pha, int t
 	cmd.device = &dev;
 	cmd.cmd_len = 6;
 	for (i=0;i<6;i++) cmd.cmnd[i] = inq[i];
-	cmd.use_sg = 0;
-	cmd.request_buffer = buf;
-	cmd.request_bufflen = 36;
+	cmd.sdb.table.nents = 0;
+	cmd.sdb.table.sgl = (void *) buf;
+	cmd.sdb.length = 36;
 
 	return ppsc_command(&cmd);
 }
