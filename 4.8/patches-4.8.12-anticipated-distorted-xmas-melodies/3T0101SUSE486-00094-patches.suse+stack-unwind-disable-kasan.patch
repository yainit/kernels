Subject: Disable KASAN+KCOV for stack unwinder code
From: Jiri Slaby <jslaby@suse.cz>
Patch-mainline: no, depends on stack unwinder

When KASAN or KCOV is instrumented into unwinder code, it takes ages
to boot the kernel. save_stack is called when allocating memory and it
indeed propagates to the unwinder code. So disable them on unwind.c
and mm/maccess.c (for probe_kernel_address). The same is done for
dumpstack*.c by upstream.

Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 kernel/Makefile |    3 +++
 mm/Makefile     |    2 ++
 2 files changed, 5 insertions(+)

--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -25,10 +25,13 @@ KCOV_INSTRUMENT_softirq.o := n
 # and produce insane amounts of uninteresting coverage.
 KCOV_INSTRUMENT_module.o := n
 KCOV_INSTRUMENT_extable.o := n
+KCOV_INSTRUMENT_unwind.o := n
 # Don't self-instrument.
 KCOV_INSTRUMENT_kcov.o := n
 KASAN_SANITIZE_kcov.o := n
 
+KASAN_SANITIZE_unwind.o := n
+
 # cond_syscall is currently not LTO compatible
 CFLAGS_sys_ni.o = $(DISABLE_LTO)
 
--- a/mm/Makefile
+++ b/mm/Makefile
@@ -2,6 +2,7 @@
 # Makefile for the linux memory manager.
 #
 
+KASAN_SANITIZE_maccess.o := n
 KASAN_SANITIZE_slab_common.o := n
 KASAN_SANITIZE_slab.o := n
 KASAN_SANITIZE_slub.o := n
@@ -17,6 +18,7 @@ KCOV_INSTRUMENT_page_alloc.o := n
 KCOV_INSTRUMENT_debug-pagealloc.o := n
 KCOV_INSTRUMENT_kmemleak.o := n
 KCOV_INSTRUMENT_kmemcheck.o := n
+KCOV_INSTRUMENT_maccess.o := n
 KCOV_INSTRUMENT_memcontrol.o := n
 KCOV_INSTRUMENT_mmzone.o := n
 KCOV_INSTRUMENT_vmstat.o := n
